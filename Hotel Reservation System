import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class HotelReservationSystem {

    // Room class
    static class Room {
        private String roomType;
        private int roomNumber;
        private boolean isAvailable;
        private double pricePerNight;

        public Room(String roomType, int roomNumber, double pricePerNight) {
            this.roomType = roomType;
            this.roomNumber = roomNumber;
            this.pricePerNight = pricePerNight;
            this.isAvailable = true;
        }

        public String getRoomType() {
            return roomType;
        }

        public int getRoomNumber() {
            return roomNumber;
        }

        public boolean isAvailable() {
            return isAvailable;
        }

        public void setAvailability(boolean isAvailable) {
            this.isAvailable = isAvailable;
        }

        public double getPricePerNight() {
            return pricePerNight;
        }

        @Override
        public String toString() {
            return "Room Type: " + roomType + ", Room Number: " + roomNumber + ", Price per Night: $" + pricePerNight;
        }
    }

    // Reservation class
    static class Reservation {
        private Room room;
        private String guestName;
        private String checkInDate;
        private String checkOutDate;

        public Reservation(Room room, String guestName, String checkInDate, String checkOutDate) {
            this.room = room;
            this.guestName = guestName;
            this.checkInDate = checkInDate;
            this.checkOutDate = checkOutDate;
        }

        public Room getRoom() {
            return room;
        }

        public String getGuestName() {
            return guestName;
        }

        public String getCheckInDate() {
            return checkInDate;
        }

        public String getCheckOutDate() {
            return checkOutDate;
        }

        @Override
        public String toString() {
            return "Reservation for " + guestName + " - " + room.toString() + ", Check-in: " + checkInDate + ", Check-out: " + checkOutDate;
        }
    }

    // Main system class
    private List<Room> rooms;
    private List<Reservation> reservations;

    public HotelReservationSystem() {
        rooms = new ArrayList<>();
        reservations = new ArrayList<>();
        initializeRooms();
    }

    private void initializeRooms() {
        // Add some sample rooms
        rooms.add(new Room("Single", 101, 50.0));
        rooms.add(new Room("Double", 102, 75.0));
        rooms.add(new Room("Suite", 103, 150.0));
    }

    public void searchAvailableRooms() {
        System.out.println("Available rooms:");
        boolean found = false;
        for (Room room : rooms) {
            if (room.isAvailable()) {
                System.out.println(room);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No available rooms.");
        }
    }

    public boolean makeReservation(String guestName, int roomNumber, String checkInDate, String checkOutDate) {
        for (Room room : rooms) {
            if (room.getRoomNumber() == roomNumber && room.isAvailable()) {
                room.setAvailability(false);
                Reservation reservation = new Reservation(room, guestName, checkInDate, checkOutDate);
                reservations.add(reservation);
                System.out.println("Reservation made successfully!");
                processPayment(room.getPricePerNight());
                return true;
            }
        }
        System.out.println("Room not available.");
        return false;
    }

    private void processPayment(double amount) {
        // Simulate payment processing
        System.out.println("Processing payment of $" + amount + "...");
        System.out.println("Payment successful!");
    }

    public void viewBookingDetails() {
        System.out.println("All reservations:");
        if (reservations.isEmpty()) {
            System.out.println("No reservations found.");
        } else {
            for (Reservation reservation : reservations) {
                System.out.println(reservation);
            }
        }
    }

    public void run() {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\nHotel Reservation System");
            System.out.println("1. Search for Available Rooms");
            System.out.println("2. Make a Reservation");
            System.out.println("3. View Booking Details");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1:
                    searchAvailableRooms();
                    break;
                case 2:
                    System.out.print("Enter your name: ");
                    String guestName = scanner.nextLine();
                    System.out.print("Enter room number to book: ");
                    int roomNumber = scanner.nextInt();
                    scanner.nextLine();  // Consume newline
                    System.out.print("Enter check-in date (YYYY-MM-DD): ");
                    String checkInDate = scanner.nextLine();
                    System.out.print("Enter check-out date (YYYY-MM-DD): ");
                    String checkOutDate = scanner.nextLine();
                    makeReservation(guestName, roomNumber, checkInDate, checkOutDate);
                    break;
                case 3:
                    viewBookingDetails();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    public static void main(String[] args) {
        HotelReservationSystem system = new HotelReservationSystem();
        system.run();
    }
}
